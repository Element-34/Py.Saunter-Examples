versions pytest-2.2.4, py-1.4.9, python-2.7.2.final.0
cwd=/Users/adam/work/saunter/py.saunter-examples/ebay
args=['-m', 'ebay', '-v', '--debug', '--dist=load', '--tx=2*popen', '--junitxml=/Users/adam/work/saunter/py.saunter-examples/ebay/logs/2012-08-05-17-27-14.xml', '--tb=native', 'scripts']

  finish pytest_cmdline_parse --> <_pytest.config.Config object at 0x1017c3750> [hook]
pytest_cmdline_main {'config': <_pytest.config.Config object at 0x1017c3750>} [hook]
  pytest_plugin_registered {'manager': <_pytest.core.PluginManager object at 0x1007b3f90>, 'plugin': <Session 'ebay'>} [hook]
  pytest_configure {'config': <_pytest.config.Config object at 0x1017c3750>} [hook]
    pytest_plugin_registered {'manager': <_pytest.core.PluginManager object at 0x1007b3f90>, 'plugin': <_pytest.junitxml.LogXML object at 0x1017da4d0>} [hook]
    configured with mode set to 'rewrite' [assertion]
    pytest_plugin_registered {'manager': <_pytest.core.PluginManager object at 0x1007b3f90>, 'plugin': <_pytest.terminal.TerminalReporter instance at 0x1019d47a0>} [hook]
    pytest_plugin_registered {'manager': <_pytest.core.PluginManager object at 0x1007b3f90>, 'plugin': <xdist.dsession.TerminalDistReporter instance at 0x101a005f0>} [hook]
    pytest_plugin_registered {'manager': <_pytest.core.PluginManager object at 0x1007b3f90>, 'plugin': <xdist.dsession.DSession instance at 0x1019e0d88>} [hook]
  pytest_sessionstart {'session': <Session 'ebay'>} [hook]
    pytest_report_header {'config': <_pytest.config.Config object at 0x1017c3750>} [hook]
      finish pytest_report_header --> [['using: pytest-2.2.4 pylib-1.4.9', 'setuptools registered plugins:', '  pytest-marks-0.3 at /Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pytest_marks-0.3-py2.7.egg/marks/marks.pyc', '  pytest-xdist-1.8 at /Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/pytest_xdist-1.8-py2.7.egg/xdist/plugin.pyc']] [hook]
    pytest_xdist_setupnodes {'config': <_pytest.config.Config object at 0x1017c3750>, 'specs': [<XSpec 'popen'>, <XSpec 'popen'>]} [hook]
    pytest_xdist_newgateway {'gateway': <PopenGateway id='gw0' receive-live, 0 active channels>} [hook]
    pytest_xdist_newgateway {'gateway': <PopenGateway id='gw1' receive-live, 0 active channels>} [hook]
    setting up nodes [config:nodemanager]
    new basetemp /var/folders/dr/stz2_nx97519b6qwssxjpl_80000gn/T/pytest-18 [config:tmpdir]
    pytest_configure_node {'node': <SlaveController gw0>} [hook]
    started node <SlaveController gw0> [config:nodemanager]
    pytest_configure_node {'node': <SlaveController gw1>} [hook]
    started node <SlaveController gw1> [config:nodemanager]
  pytest_collection {'session': <Session 'ebay'>} [hook]
    finish pytest_collection --> True [hook]
  pytest_runtestloop {'session': <Session 'ebay'>} [hook]
    pytest_testnodeready {'node': <SlaveController gw0>} [hook]
    pytest_testnodeready {'node': <SlaveController gw1>} [hook]
    pytest_runtest_logreport {'report': <TestReport 'scripts/DressShirts.py::EbayExample::test_har_retrieval' when='setup' outcome='passed'>} [hook]
      pytest_report_teststatus {'report': <TestReport 'scripts/DressShirts.py::EbayExample::test_har_retrieval' when='setup' outcome='passed'>} [hook]
        finish pytest_report_teststatus --> ('', '', '') [hook]
    pytest_runtest_logreport {'report': <TestReport 'scripts/DressShirts.py::EbayExample::test_blacklist' when='setup' outcome='passed'>} [hook]
      pytest_report_teststatus {'report': <TestReport 'scripts/DressShirts.py::EbayExample::test_blacklist' when='setup' outcome='passed'>} [hook]
        finish pytest_report_teststatus --> ('', '', '') [hook]
    pytest_runtest_logreport {'report': <TestReport 'scripts/DressShirts.py::EbayExample::test_blacklist' when='call' outcome='failed'>} [hook]
      pytest_report_teststatus {'report': <TestReport 'scripts/DressShirts.py::EbayExample::test_blacklist' when='call' outcome='failed'>} [hook]
        finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
    pytest_runtest_logreport {'report': <TestReport 'scripts/DressShirts.py::EbayExample::test_blacklist' when='teardown' outcome='passed'>} [hook]
      pytest_report_teststatus {'report': <TestReport 'scripts/DressShirts.py::EbayExample::test_blacklist' when='teardown' outcome='passed'>} [hook]
        finish pytest_report_teststatus --> ('', '', '') [hook]
    pytest_runtest_logreport {'report': <TestReport 'scripts/DressShirts.py::EbayExample::test_meta' when='setup' outcome='passed'>} [hook]
      pytest_report_teststatus {'report': <TestReport 'scripts/DressShirts.py::EbayExample::test_meta' when='setup' outcome='passed'>} [hook]
        finish pytest_report_teststatus --> ('', '', '') [hook]
    pytest_runtest_logreport {'report': <TestReport 'scripts/DressShirts.py::EbayExample::test_meta' when='call' outcome='failed'>} [hook]
      pytest_report_teststatus {'report': <TestReport 'scripts/DressShirts.py::EbayExample::test_meta' when='call' outcome='failed'>} [hook]
        finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
    pytest_runtest_logreport {'report': <TestReport 'scripts/DressShirts.py::EbayExample::test_meta' when='teardown' outcome='passed'>} [hook]
      pytest_report_teststatus {'report': <TestReport 'scripts/DressShirts.py::EbayExample::test_meta' when='teardown' outcome='passed'>} [hook]
        finish pytest_report_teststatus --> ('', '', '') [hook]
    pytest_runtest_logreport {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_set_by_index' when='setup' outcome='passed'>} [hook]
      pytest_report_teststatus {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_set_by_index' when='setup' outcome='passed'>} [hook]
        finish pytest_report_teststatus --> ('', '', '') [hook]
    pytest_runtest_logreport {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_set_by_index' when='call' outcome='passed'>} [hook]
      pytest_report_teststatus {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_set_by_index' when='call' outcome='passed'>} [hook]
        finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
    pytest_runtest_logreport {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_set_by_index' when='teardown' outcome='passed'>} [hook]
      pytest_report_teststatus {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_set_by_index' when='teardown' outcome='passed'>} [hook]
        finish pytest_report_teststatus --> ('', '', '') [hook]
    pytest_runtest_logreport {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_set_by_value' when='setup' outcome='passed'>} [hook]
      pytest_report_teststatus {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_set_by_value' when='setup' outcome='passed'>} [hook]
        finish pytest_report_teststatus --> ('', '', '') [hook]
    pytest_runtest_logreport {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_set_by_value' when='call' outcome='passed'>} [hook]
      pytest_report_teststatus {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_set_by_value' when='call' outcome='passed'>} [hook]
        finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
    pytest_runtest_logreport {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_set_by_value' when='teardown' outcome='passed'>} [hook]
      pytest_report_teststatus {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_set_by_value' when='teardown' outcome='passed'>} [hook]
        finish pytest_report_teststatus --> ('', '', '') [hook]
    pytest_testnodedown {'node': <SlaveController gw0>, 'error': None} [hook]
    pytest_runtest_logreport {'report': <TestReport 'scripts/DressShirts.py::EbayExample::test_har_retrieval' when='call' outcome='failed'>} [hook]
      pytest_report_teststatus {'report': <TestReport 'scripts/DressShirts.py::EbayExample::test_har_retrieval' when='call' outcome='failed'>} [hook]
        finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
    pytest_runtest_logreport {'report': <TestReport 'scripts/DressShirts.py::EbayExample::test_har_retrieval' when='teardown' outcome='passed'>} [hook]
      pytest_report_teststatus {'report': <TestReport 'scripts/DressShirts.py::EbayExample::test_har_retrieval' when='teardown' outcome='passed'>} [hook]
        finish pytest_report_teststatus --> ('', '', '') [hook]
    pytest_runtest_logreport {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_get' when='setup' outcome='passed'>} [hook]
      pytest_report_teststatus {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_get' when='setup' outcome='passed'>} [hook]
        finish pytest_report_teststatus --> ('', '', '') [hook]
    pytest_runtest_logreport {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_get' when='call' outcome='passed'>} [hook]
      pytest_report_teststatus {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_get' when='call' outcome='passed'>} [hook]
        finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
    pytest_runtest_logreport {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_get' when='teardown' outcome='passed'>} [hook]
      pytest_report_teststatus {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_get' when='teardown' outcome='passed'>} [hook]
        finish pytest_report_teststatus --> ('', '', '') [hook]
    pytest_runtest_logreport {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_set_by_text' when='setup' outcome='passed'>} [hook]
      pytest_report_teststatus {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_set_by_text' when='setup' outcome='passed'>} [hook]
        finish pytest_report_teststatus --> ('', '', '') [hook]
    pytest_runtest_logreport {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_set_by_text' when='call' outcome='passed'>} [hook]
      pytest_report_teststatus {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_set_by_text' when='call' outcome='passed'>} [hook]
        finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
    pytest_runtest_logreport {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_set_by_text' when='teardown' outcome='passed'>} [hook]
      pytest_report_teststatus {'report': <TestReport 'scripts/SearchCategories.py::EbayExample::test_single_set_by_text' when='teardown' outcome='passed'>} [hook]
        finish pytest_report_teststatus --> ('', '', '') [hook]
    pytest_testnodedown {'node': <SlaveController gw1>, 'error': None} [hook]
    finish pytest_runtestloop --> True [hook]
  pytest_sessionfinish {'session': <Session 'ebay'>, 'exitstatus': 1} [hook]
    pytest_terminal_summary {'terminalreporter': <_pytest.terminal.TerminalReporter instance at 0x1019d47a0>} [hook]
  pytest_unconfigure {'config': <_pytest.config.Config object at 0x1017c3750>} [hook]
    pytest_plugin_unregistered {'plugin': <_pytest.junitxml.LogXML object at 0x1017da4d0>} [hook]
    finish [config:tmpdir]
